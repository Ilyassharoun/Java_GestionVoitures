/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

/**
 *
 * @author samsung
 */
import dao.VoitureDAO;
import models.Voiture;
import java.sql.SQLException;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class GestionDesVoituresFrame extends javax.swing.JFrame {

    /**
     * Creates new form GestionDesVoituresFrame
     */
    public GestionDesVoituresFrame() {
        initComponents();
        setTitle("Gestion des VÃ©hicules");
        setLocationRelativeTo(null);
        loadVoitures(); 
        setIconImage(new ImageIcon(getClass().getResource("/resources/jmlogo.png")).getImage());
        setResizable(false); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFiltrer = new javax.swing.JTextField();
        BTN_FILTRER = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVoitures = new javax.swing.JTable();
        BTN_AJT = new javax.swing.JButton();
        BTN_SUP = new javax.swing.JButton();
        BTN_RETOUR = new javax.swing.JButton();
        BTN_MODIFIER = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));

        jLabel1.setBackground(new java.awt.Color(51, 153, 255));
        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("GESTION DES VOITURES ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Rechercher une voiture");

        txtFiltrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltrerActionPerformed(evt);
            }
        });

        BTN_FILTRER.setBackground(new java.awt.Color(204, 204, 204));
        BTN_FILTRER.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        BTN_FILTRER.setText("Filtrer");
        BTN_FILTRER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_FILTRERActionPerformed(evt);
            }
        });

        tblVoitures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Plaque", "Marque", "Model", "Annee", "Couleur", "Kilometrage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVoitures);

        BTN_AJT.setBackground(new java.awt.Color(204, 204, 204));
        BTN_AJT.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        BTN_AJT.setText("Ajouter");
        BTN_AJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_AJTActionPerformed(evt);
            }
        });

        BTN_SUP.setBackground(new java.awt.Color(204, 204, 204));
        BTN_SUP.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        BTN_SUP.setText("Supprimer");
        BTN_SUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_SUPActionPerformed(evt);
            }
        });

        BTN_RETOUR.setBackground(new java.awt.Color(204, 204, 204));
        BTN_RETOUR.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        BTN_RETOUR.setText("Retour");
        BTN_RETOUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_RETOURActionPerformed(evt);
            }
        });

        BTN_MODIFIER.setBackground(new java.awt.Color(204, 204, 204));
        BTN_MODIFIER.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        BTN_MODIFIER.setText("Modifier");
        BTN_MODIFIER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_MODIFIERActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTN_FILTRER, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(BTN_AJT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTN_MODIFIER, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BTN_SUP, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BTN_RETOUR, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFiltrer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BTN_FILTRER))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN_RETOUR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTN_SUP, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTN_MODIFIER, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTN_AJT, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void loadVoitures() {
    DefaultTableModel model = (DefaultTableModel) tblVoitures.getModel();
    model.setRowCount(0); // Clear existing data
    
    try {
        List<Voiture> voitures = VoitureDAO.getAllVoitures();
        
        if (voitures.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "Aucun vÃ©hicule trouvÃ© dans la base de donnÃ©es",
                "Information",
                JOptionPane.INFORMATION_MESSAGE);
        }
        
        for (Voiture v : voitures) {
            model.addRow(new Object[]{
                v.getPlaqueImmatriculation(),
                v.getMarque(),
                v.getModele(),
                v.getAnnee(),
                v.getCouleur(),
                v.getKilometrage(),
                v.getDernierVidange(),
                // Add more columns if needed
            });
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this,
            "Erreur de base de donnÃ©es: " + e.getMessage(),
            "Erreur",
            JOptionPane.ERROR_MESSAGE);
        }
    }

    private void BTN_FILTRERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_FILTRERActionPerformed
        // TODO add your handling code here:
        String searchText = txtFiltrer.getText().trim();
    DefaultTableModel model = (DefaultTableModel) tblVoitures.getModel();
    
    // Clear previous results
    model.setRowCount(0);
    
    try {
        List<Voiture> filtered;
        
        if (searchText.isEmpty()) {
            // Show informational message
            JOptionPane.showMessageDialog(this,
                "Veuillez entrer un terme de recherche\n" +
                "(Plaque, Marque ou ModÃ¨le)",
                "Champ de recherche vide",
                JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        // Perform search
        filtered = VoitureDAO.searchVoitures(searchText);
        
        if (filtered.isEmpty()) {
            // No results found
            JOptionPane.showMessageDialog(this,
                "Aucun vÃ©hicule trouvÃ© pour: '" + searchText + "'",
                "Aucun rÃ©sultat",
                JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Display results
            for (Voiture v : filtered) {
                model.addRow(new Object[]{
                    v.getPlaqueImmatriculation(),
                    v.getMarque(),
                    v.getModele(),
                    v.getAnnee(),
                    v.getCouleur(),
                    v.getKilometrage(),
                    v.getDernierVidange(),
                });
            }
            
            // Optional: Show results count in status bar
            
        }
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this,
            "Erreur de recherche:\n" + e.getMessage(),
            "Erreur de base de donnÃ©es",
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_BTN_FILTRERActionPerformed

    private void txtFiltrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltrerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltrerActionPerformed

    private void BTN_MODIFIERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_MODIFIERActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVoitures.getSelectedRow();
    
    if (selectedRow >= 0) {
        // Get data from selected row
        String plaque = (String) tblVoitures.getValueAt(selectedRow, 0);
        
        try {
            // Fetch complete car data from DB
            Voiture voiture = VoitureDAO.getVoitureByPlaque(plaque);
            
            // Open modification window with existing data
            new AjouterVoitureFrame(voiture).setVisible(true);
            this.dispose();
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                "Erreur: " + e.getMessage(),
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this,
            "SÃ©lectionnez un vÃ©hicule Ã  modifier",
            "Aucune sÃ©lection",
            JOptionPane.WARNING_MESSAGE);
    }
        
    }//GEN-LAST:event_BTN_MODIFIERActionPerformed

    private void BTN_AJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_AJTActionPerformed
                // TODO add your handling code here:
                new AjouterVoitureFrame().setVisible(true);
                this.dispose(); 
    }//GEN-LAST:event_BTN_AJTActionPerformed

    private void BTN_RETOURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_RETOURActionPerformed
        // TODO add your handling code here:
        this.dispose(); // Close current window
        new MainMenuFrame().setVisible(true); // Reopen main menu
    }//GEN-LAST:event_BTN_RETOURActionPerformed

    private void BTN_SUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_SUPActionPerformed
        // TODO add your handling code here:
        int row = tblVoitures.getSelectedRow();
    
    // Case 1: No selection
    if (row < 0) {
        JOptionPane.showMessageDialog(this,
            "Veuillez sÃ©lectionner un vÃ©hicule Ã  supprimer",
            "Aucune sÃ©lection",
            JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    // Get selected car info
    String plaque = (String) tblVoitures.getValueAt(row, 0);
    String marque = (String) tblVoitures.getValueAt(row, 1);
    String modele = (String) tblVoitures.getValueAt(row, 2);
    
    // Confirmation dialog
    int confirm = JOptionPane.showConfirmDialog(this,
        "Voulez-vous vraiment supprimer ce vÃ©hicule ?\n"
        + "Plaque: " + plaque + "\n"
        + "Marque/ModÃ¨le: " + marque + " " + modele,
        "Confirmer la suppression",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE);
    
    // Case 2: User cancelled
    if (confirm != JOptionPane.YES_OPTION) {
        return; 
    }
    
    // Case 3: Proceed with deletion
    try {
        VoitureDAO.supprimerVoiture(plaque);
        
        // Refresh table and show success
        loadVoitures();
        JOptionPane.showMessageDialog(this,
            "VÃ©hicule supprimÃ© avec succÃ¨s",
            "SuccÃ¨s",
            JOptionPane.INFORMATION_MESSAGE);
            
    } catch (SQLException e) {
        // Case 4: Database error
        JOptionPane.showMessageDialog(this,
            "Erreur lors de la suppression:\n" + e.getMessage(),
            "Erreur",
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_BTN_SUPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionDesVoituresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionDesVoituresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionDesVoituresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionDesVoituresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionDesVoituresFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_AJT;
    private javax.swing.JButton BTN_FILTRER;
    private javax.swing.JButton BTN_MODIFIER;
    private javax.swing.JButton BTN_RETOUR;
    private javax.swing.JButton BTN_SUP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVoitures;
    private javax.swing.JTextField txtFiltrer;
    // End of variables declaration//GEN-END:variables
}
